services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - '5173:5173'
    environment:
      - VITE_API_URL=http://backend:5000
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend
    ports:
      - '5000:5000'
    # não expor a porta do backend para evitar ataques de DDoS
    # frontend se comunica com o backend através de uma URL fixa
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=mydb
    depends_on:
      - postgres
    networks:
      - app-network

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '8080:80'
    depends_on:
      - postgres
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672' # messaging
      - '15672:15672' # management UI
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
